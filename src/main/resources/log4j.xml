<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- 콘솔로그 -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d{yy/MM/dd HH:mm:ss.SSS} %-5p: %c - %m%n" />
		</layout>
	</appender>

	<!-- 파일로그 -->
	<appender name="dailyRollingFile" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="/usr/local/tomcat/logs/timereport.log" />
		<param name="Append" value="true" />
		<param name="DatePattern" value=".yyyy-MM-dd" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%-5p] %d{yy/MM/dd HH:mm:ss.SSS} [%C] (%F:%L) - %m%n" />
		</layout>
	</appender>

	<logger name="efuture" additivity="false">
		<level value="info" />
		<appender-ref ref="console" />
		<appender-ref ref="dailyRollingFile" />
	</logger>
	<!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
	<logger name="jdbc.sqlonly" additivity="false">
		<!--<level value="info" />-->
		<appender-ref ref="dailyRollingFile" />
	</logger>
	<!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
	<logger name="jdbc.sqltiming" additivity="false">
		<level value="error" />
	</logger>
	<!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
	<logger name="jdbc.audit" additivity="false">
		<level value="error" />
	</logger>
	<!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
	<logger name="jdbc.resultset" additivity="false">
		<level value="error" />
	</logger>
	<!-- 기본 출력 설정 -->
	<root>
		<level value="error"/>
		<appender-ref ref="console" />
		<appender-ref ref="dailyRollingFile"/>
	</root>
</log4j:configuration>